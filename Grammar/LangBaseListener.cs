//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\della\projects\the-interpreter-101\Lang.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LangBaseListener : ILangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] LangParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] LangParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] LangParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] LangParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] LangParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] LangParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] LangParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] LangParser.InputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutput([NotNull] LangParser.OutputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutput([NotNull] LangParser.OutputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.ifst"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfst([NotNull] LangParser.IfstContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.ifst"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfst([NotNull] LangParser.IfstContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] LangParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] LangParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCond([NotNull] LangParser.CondContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCond([NotNull] LangParser.CondContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] LangParser.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] LangParser.RelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtrib([NotNull] LangParser.AtribContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.atrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtrib([NotNull] LangParser.AtribContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] LangParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] LangParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] LangParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] LangParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] LangParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] LangParser.FactorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Grammar
